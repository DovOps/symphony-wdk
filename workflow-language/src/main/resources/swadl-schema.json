{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "SWADL Schema",
    "description": "SWADL (Symphony Workflow Automation Definition Language) is a language to describe workflows on Symphony.",
    "default": {},
    "type": "object",
    "additionalProperties": false,
    "required": [
        "name",
        "activities"
    ],
    "properties": {
        "name": {
            "type": "string",
            "title": "Workflow's name",
            "description": "A descriptive name for the workflow, it will appear in logs and audit trails.",
            "default": "my-workflow"
        },
        "version": {
            "type": "string",
            "title": "Workflow's version",
            "description": "For now the v1 version is the only and default one.",
            "default": "v1"
        },
        "variables": {
            "type": "object",
            "title": "Workflow's variables",
            "description": "Variables are accessible and editable within the entire workflow. A map of key: value entries is expected."
        },
        "activities": {
            "type": "array",
            "title": "Workflow's activities",
            "description": "A list of activities to be executed by the workflow. By default the execution is sequential but complex logic can be orchestrated with if/else conditions as well as on/activity-finished events.",
            "$comment": "Defined like this to support both validation and autocompletion, even with custom activities. Last item is removed on the fly during validation and replaced by known custom activities.",
            "items": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/create-room"
                    },
                    {
                        "$ref": "#/definitions/update-room"
                    },
                    {
                        "$ref": "#/definitions/add-room-member"
                    },
                    {
                        "$ref": "#/definitions/remove-room-member"
                    },
                    {
                        "$ref": "#/definitions/promote-room-owner"
                    },
                    {
                        "$ref": "#/definitions/demote-room-owner"
                    },
                    {
                        "$ref": "#/definitions/send-message"
                    },
                    {
                        "$ref": "#/definitions/execute-script"
                    },
                    {
                        "$ref": "#/definitions/create-user"
                    },
                    {
                        "$ref": "#/definitions/update-user"
                    },
                    {
                        "$ref": "#/definitions/add-user-role"
                    },
                    {
                        "$ref": "#/definitions/remove-user-role"
                    },
                    {
                        "$ref": "#/definitions/get-user"
                    },
                    {
                        "$ref": "#/definitions/get-users"
                    },
                    {
                        "type": "object",
                        "patternProperties": {
                            "send-message": {
                                "$ref": "#/definitions/send-message"
                            },
                            "execute-script": {
                                "$ref": "#/definitions/execute-script"
                            },
                            "create-room": {
                                "$ref": "#/definitions/create-room"
                            },
                            "update-room": {
                                "$ref": "#/definitions/update-room"
                            },
                            "add-room-member": {
                                "$ref": "#/definitions/add-room-member"
                            },
                            "remove-room-member": {
                                "$ref": "#/definitions/remove-room-member"
                            },
                            "promote-room-owner": {
                                "$ref": "#/definitions/promote-room-owner"
                            },
                            "demote-room-owner": {
                                "$ref": "#/definitions/demote-room-owner"
                            },
                            "create-user": {
                                "$ref": "#/definitions/create-user"
                            },
                            "update-user": {
                                "$ref": "#/definitions/update-user"
                            },
                            "add-user-role": {
                                "$ref": "#/definitions/add-user-role"
                            },
                            "remove-user-role": {
                                "$ref": "#/definitions/remove-user-role"
                            },
                            "get-user": {
                                "$ref": "#/definitions/get-user"
                            },
                            "get-users": {
                                "$ref": "#/definitions/get-users"
                            },
                            "^(?!create-room|update-room|create-user|update-user|execute-script|get-users)([a-z0-9-]+)$": {
                                "$comment": "Room tasks are specifically excluded because they don't have strong differentiators in properties, 'more than one variant' warnings are issued otherwise.",
                                "$ref": "#/definitions/basic-activity-inner"
                            }
                        }
                    }
                ]
            }
        }
    },
    "definitions": {
        "create-room": {
            "type": "object",
            "properties": {
                "create-room": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/create-room-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "create-room"
            ]
        },
        "update-room": {
            "type": "object",
            "properties": {
                "update-room": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/update-room-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "update-room"
            ]
        },
        "add-room-member": {
            "type": "object",
            "properties": {
                "add-room-member": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/add-room-member-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "add-room-member"
            ]
        },
        "remove-room-member": {
            "type": "object",
            "properties": {
                "remove-room-member": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/remove-room-member-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "remove-room-member"
            ]
        },
        "promote-room-owner": {
            "type": "object",
            "properties": {
                "promote-room-owner": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/promote-room-owner-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "promote-room-owner"
            ]
        },
        "demote-room-owner": {
            "type": "object",
            "properties": {
                "demote-room-owner": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/demote-room-owner-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "demote-room-owner"
            ]
        },
        "send-message": {
            "type": "object",
            "properties": {
                "send-message": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/send-message-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "send-message"
            ]
        },
        "execute-script": {
            "type": "object",
            "properties": {
                "execute-script": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/execute-script-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "execute-script"
            ]
        },
        "create-user": {
            "type": "object",
            "properties": {
                "create-user": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/create-user-inner",
                            "required": [
                                "email",
                                "username"
                            ]
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "create-user"
            ]
        },
        "update-user": {
            "type": "object",
            "properties": {
                "update-user": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/create-user-inner"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "user-id": {
                                    "type": [
                                        "string",
                                        "integer"
                                    ],
                                    "minLength": 1
                                }
                            },
                            "required": [
                                "user-id"
                            ]
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "update-user"
            ]
        },
        "add-user-role": {
            "type": "object",
            "description": "While this activity supports multiple users and multiple roles, multiple API calls will be performed (one for each user,role pair). Make sure to limit this number to a sane limit (i.e a dozen).",
            "properties": {
                "add-user-role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/user-role-inner"
                        }
                    ]
                }
            },
            "required": [
                "add-user-role"
            ]
        },
        "remove-user-role": {
            "type": "object",
            "description": "While this activity supports multiple users and multiple roles, multiple API calls will be performed (one for each user,role pair). Make sure to limit this number to a sane limit (i.e a dozen).",
            "properties": {
                "remove-user-role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "$ref": "#/definitions/user-role-inner"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "remove-user-role"
            ]
        },
        "get-user": {
            "type": "object",
            "properties": {
                "get-user": {
                    "type": "object",
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "properties": {
                                "user-id": {
                                    "type": [
                                        "string",
                                        "integer"
                                    ],
                                    "minLength": 1
                                }
                            },
                            "required": [
                                "user-id"
                            ]
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "get-user"
            ]
        },
        "get-users": {
            "type": "object",
            "description": "See https://developers.symphony.com/restapi/reference#users-lookup-v3 for details.",
            "properties": {
                "get-users": {
                    "type": "object",
                    "allOf": [
                        {
                            "$ref": "#/definitions/basic-activity-inner"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "user-ids": {
                                    "type": "array",
                                    "description": "List of user ids. Note that for this activity, you can use either the user-ids, the emails or the usernames, but only one at a time, you cannot mix and match them.",
                                    "items": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ]
                                    },
                                    "minLength": 1
                                },
                                "emails": {
                                    "type": "array",
                                    "description": "List of email addresses. Note that for this activity, you can use either the user-ids, the emails or the usernames, but only one at a time, you cannot mix and match them.",
                                    "items": {
                                        "type": "string",
                                        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                                    },
                                    "minLength": 1
                                },
                                "usernames": {
                                    "type": "array",
                                    "description": "List of usernames. If username is specified, local must be set to true. It is possible to search for more than one username by separating them by comma. Note that for this activity, you can use either the user-ids, the emails or the usernames, but only one at a time, you cannot mix and match them.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minLength": 1
                                },
                                "local": {
                                    "type": "boolean",
                                    "description": "If true then a local DB search will be performed and only local pod users will be returned. If absent or false then a directory search will be performed and users from other pods who are visible to the calling user will also be returned.",
                                    "default": false
                                },
                                "active": {
                                    "type": "boolean",
                                    "description": "If true, it searches for active users only. If false, it searches for inactive users only. If not set, it searches for all users regardless of their status."
                                }
                            }
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "get-users"
            ]
        },
        "search-user-inner": {
            "type": "object",
            "properties": {
                "local": {
                    "type": "boolean",
                    "description": "If true then a local DB search will be performed and only local pod users will be returned. If absent or false then a directory search will be performed and users from other pods who are visible to the calling user will also be returned.",
                    "default": false
                },
                "active": {
                    "type": "boolean",
                    "description": "If true, it searches for active users only. If false, it searches for inactive users only. If not set, it searches for all users regardless of their status."
                }
            }
        },
        "on": {
            "description": "Events that can trigger the activity execution.",
            "type": "object",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "timeout": {
                            "type": "string",
                            "description": "Timeout while waiting for events, expressed as an ISO 8601 duration.",
                            "pattern": "(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?"
                        }
                    }
                },
                {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/form-replied-event"
                        },
                        {
                            "$ref": "#/definitions/activity-expired-event"
                        },
                        {
                            "$ref": "#/definitions/activity-completed-event"
                        },
                        {
                            "$ref": "#/definitions/message-received-event"
                        },
                        {
                            "$ref": "#/definitions/message-suppressed-event"
                        },
                        {
                            "$ref": "#/definitions/post-shared-event"
                        },
                        {
                            "$ref": "#/definitions/im-created-event"
                        },
                        {
                            "$ref": "#/definitions/room-created-event"
                        },
                        {
                            "$ref": "#/definitions/room-updated-event"
                        },
                        {
                            "$ref": "#/definitions/room-deactivated-event"
                        },
                        {
                            "$ref": "#/definitions/room-reactivated-event"
                        },
                        {
                            "$ref": "#/definitions/room-member-promoted-to-owner-event"
                        },
                        {
                            "$ref": "#/definitions/room-member-demoted-from-owner-event"
                        },
                        {
                            "$ref": "#/definitions/user-joined-room-event"
                        },
                        {
                            "$ref": "#/definitions/user-left-room-event"
                        },
                        {
                            "$ref": "#/definitions/user-requested-join-room-event"
                        },
                        {
                            "$ref": "#/definitions/connection-requested-event"
                        },
                        {
                            "$ref": "#/definitions/connection-accepted-event"
                        },
                        {
                            "$ref": "#/definitions/timer-fired-event"
                        },
                        {
                            "$ref": "#/definitions/one-of-event"
                        }
                    ]
                }
            ]
        },
        "user-joined-event": {
            "type": "object",
            "properties": {
                "user-joined-room": {
                    "$ref": "#/definitions/user-joined-event-inner"
                }
            },
            "required": [
                "user-joined-room"
            ]
        },
        "form-replied-event": {
            "type": "object",
            "properties": {
                "form-replied": {
                    "$ref": "#/definitions/form-replied-event-inner"
                }
            },
            "required": [
                "form-replied"
            ]
        },
        "message-received-event": {
            "type": "object",
            "properties": {
                "message-received": {
                    "$ref": "#/definitions/message-received-event-inner"
                }
            },
            "required": [
                "message-received"
            ]
        },
        "message-suppressed-event": {
            "type": "object",
            "properties": {
                "message-suppressed": {
                    "$ref": "#/definitions/message-suppressed-event-inner"
                }
            },
            "required": [
                "message-suppressed"
            ]
        },
        "post-shared-event": {
            "type": "object",
            "properties": {
                "post-shared": {
                    "$ref": "#/definitions/post-shared-event-inner"
                }
            },
            "required": [
                "post-shared"
            ]
        },
        "im-created-event": {
            "type": "object",
            "properties": {
                "im-created": {
                    "$ref": "#/definitions/im-created-event-inner"
                }
            },
            "required": [
                "im-created"
            ]
        },
        "room-created-event": {
            "type": "object",
            "properties": {
                "room-created": {
                    "$ref": "#/definitions/room-created-event-inner"
                }
            },
            "required": [
                "room-created"
            ]
        },
        "room-updated-event": {
            "type": "object",
            "properties": {
                "room-updated": {
                    "$ref": "#/definitions/room-updated-event-inner"
                }
            },
            "required": [
                "room-updated"
            ]
        },
        "room-deactivated-event": {
            "type": "object",
            "properties": {
                "room-deactivated": {
                    "$ref": "#/definitions/room-deactivated-event-inner"
                }
            },
            "required": [
                "room-deactivated"
            ]
        },
        "room-reactivated-event": {
            "type": "object",
            "properties": {
                "room-reactivated": {
                    "$ref": "#/definitions/room-reactivated-event-inner"
                }
            },
            "required": [
                "room-reactivated"
            ]
        },
        "room-member-promoted-to-owner-event": {
            "type": "object",
            "properties": {
                "room-member-promoted-to-owner": {
                    "$ref": "#/definitions/room-member-promoted-to-owner-event-inner"
                }
            },
            "required": [
                "room-member-promoted-to-owner"
            ]
        },
        "room-member-demoted-from-owner-event": {
            "type": "object",
            "properties": {
                "room-member-demoted-from-owner": {
                    "$ref": "#/definitions/room-member-demoted-from-owner-event-inner"
                }
            },
            "required": [
                "room-member-demoted-from-owner"
            ]
        },
        "user-joined-room-event": {
            "type": "object",
            "properties": {
                "user-joined-room": {
                    "$ref": "#/definitions/user-joined-room-event-inner"
                }
            },
            "required": [
                "user-joined-room"
            ]
        },
        "user-left-room-event": {
            "type": "object",
            "properties": {
                "user-left-room": {
                    "$ref": "#/definitions/user-left-room-event-inner"
                }
            },
            "required": [
                "user-left-room"
            ]
        },
        "user-requested-join-room-event": {
            "type": "object",
            "properties": {
                "user-requested-join-room": {
                    "$ref": "#/definitions/user-requested-join-room-event-inner"
                }
            },
            "required": [
                "user-requested-join-room"
            ]
        },
        "connection-requested-event": {
            "type": "object",
            "properties": {
                "connection-requested": {
                    "$ref": "#/definitions/connection-requested-event-inner"
                }
            },
            "required": [
                "connection-requested"
            ]
        },
        "connection-accepted-event": {
            "type": "object",
            "properties": {
                "connection-accepted": {
                    "$ref": "#/definitions/connection-accepted-event-inner"
                }
            },
            "required": [
                "connection-accepted"
            ]
        },
        "activity-expired-event": {
            "type": "object",
            "properties": {
                "activity-expired": {
                    "$ref": "#/definitions/activity-expired-event-inner"
                }
            },
            "required": [
                "activity-expired"
            ]
        },
        "activity-completed-event": {
            "type": "object",
            "properties": {
                "activity-completed": {
                    "$ref": "#/definitions/activity-completed-event-inner"
                },
                "if": {
                    "type": "string"
                }
            },
            "required": [
                "activity-completed"
            ]
        },
        "one-of-event": {
            "type": "object",
            "properties": {
                "one-of": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/form-replied-event"
                            },
                            {
                                "$ref": "#/definitions/activity-expired-event"
                            },
                            {
                                "$ref": "#/definitions/activity-completed-event"
                            },
                            {
                                "$ref": "#/definitions/message-received-event"
                            },
                            {
                                "$ref": "#/definitions/message-suppressed-event"
                            },
                            {
                                "$ref": "#/definitions/post-shared-event"
                            },
                            {
                                "$ref": "#/definitions/im-created-event"
                            },
                            {
                                "$ref": "#/definitions/room-created-event"
                            },
                            {
                                "$ref": "#/definitions/room-updated-event"
                            },
                            {
                                "$ref": "#/definitions/room-deactivated-event"
                            },
                            {
                                "$ref": "#/definitions/room-reactivated-event"
                            },
                            {
                                "$ref": "#/definitions/room-member-promoted-to-owner-event"
                            },
                            {
                                "$ref": "#/definitions/room-member-demoted-from-owner-event"
                            },
                            {
                                "$ref": "#/definitions/user-joined-room-event"
                            },
                            {
                                "$ref": "#/definitions/user-left-room-event"
                            },
                            {
                                "$ref": "#/definitions/user-requested-join-room-event"
                            },
                            {
                                "$ref": "#/definitions/connection-requested-event"
                            },
                            {
                                "$ref": "#/definitions/connection-accepted-event"
                            },
                            {
                                "$ref": "#/definitions/timer-fired-event"
                            }
                        ]
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "one-of"
            ]
        },
        "timer-fired-event": {
            "type": "object",
            "properties": {
                "timer-fired": {
                    "$ref": "#/definitions/timer-fired-event-inner"
                }
            },
            "additionalProperties": false,
            "required": [
                "timer-fired"
            ]
        },
        "timer-fired-event-inner": {
            "type": "object",
            "properties": {
                "repeat": {
                    "type": "string"
                },
                "at": {
                    "type": "string"
                }
            }
        },
        "user-joined-event-inner": {
            "type": "object",
            "properties": {
                "stream-id": {
                    "type": "string"
                }
            }
        },
        "form-replied-event-inner": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "message-received-event-inner": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "content": {
                    "type": "string"
                },
                "requires-bot-mention": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "message-suppressed-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "post-shared-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "im-created-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-created-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-updated-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-deactivated-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-reactivated-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-member-promoted-to-owner-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-member-demoted-from-owner-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "user-joined-room-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "user-left-room-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "user-requested-join-room-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "connection-requested-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "connection-accepted-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "activity-expired-event-inner": {
            "type": "object",
            "properties": {
                "activity-id": {
                    "type": "string"
                }
            }
        },
        "activity-completed-event-inner": {
            "type": "object",
            "properties": {
                "activity-id": {
                    "type": "string"
                }
            }
        },
        "basic-activity-inner": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Activity's identifier, should be unique across workflow. As it can be used as a variable identifier only alphanumerical characters are allowed.",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]+$"
                },
                "description": {
                    "description": "Activity's description, mostly used for documentation purpose.",
                    "type": "string"
                },
                "on": {
                    "$ref": "#/definitions/on"
                },
                "if": {
                    "type": "string"
                },
                "else": {
                    "type": "object"
                }
            },
            "required": [
                "id"
            ]
        },
        "create-room-inner": {
            "type": "object",
            "description": "Create a room, IM or MIM",
            "anyOf": [
                {
                    "required": [
                        "room-name",
                        "room-description"
                    ]
                },
                {
                    "required": [
                        "uids"
                    ]
                }
            ],
            "properties": {
                "room-name": {
                    "description": "Room's name. Room names will be considered the same if they only differ in capitalization and whitespace. E.g. \"room1\" and \"R O O M 1\" are considered the same. Also, room names must be shorter than 50 characters.",
                    "type": "string",
                    "maxLength": 50
                },
                "room-description": {
                    "description": "Room's description.",
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "update-room-inner": {
            "type": "object",
            "required": [
                "stream-id"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "room-name": {
                    "description": "Room's name. Room names will be considered the same if they only differ in capitalization and whitespace. E.g. \"room1\" and \"R O O M 1\" are considered the same. Also, room names must be shorter than 50 characters.",
                    "type": "string",
                    "maxLength": 50
                },
                "room-description": {
                    "description": "Room's description.",
                    "type": "string"
                },
                "keywords": {
                    "type": "object"
                },
                "membersCanInvite": {
                    "type": "boolean"
                },
                "discoverable": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "copyProtected": {
                    "type": "boolean"
                },
                "crossPod": {
                    "type": "boolean"
                },
                "viewHistory": {
                    "type": "boolean"
                },
                "multiLateralRoom": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "add-room-member-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "remove-room-member-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "promote-room-owner-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "demote-room-owner-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "send-message-inner": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "to": {
                    "$ref": "#/definitions/to"
                },
                "content": {
                    "type": "string"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref":"#/definitions/attachment"
                    }
                }
            }
        },
        "execute-script-inner": {
            "type": "object",
            "required": [
                "script"
            ],
            "properties": {
                "script": {
                    "type": "string",
                    "description": "Script to execute (only Groovy is supported)",
                    "x-intellij-language-injection": "Groovy"
                }
            }
        },
        "create-user-inner": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "NORMAL",
                        "SYSTEM"
                    ],
                    "default": "NORMAL",
                    "description": "Account type. Possible values: NORMAL (end-user), SYSTEM (service user).\nIf not specified, NORMAL will be used.\nWhen you create a SYSTEM account, the following properties are not required: firstName, lastName."
                },
                "email": {
                    "type": "string",
                    "description": "Email address, must be unique",
                    "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                },
                "firstname": {
                    "type": "string",
                    "description": "The user's first name. Required for NORMAL users.",
                    "minLength": 1
                },
                "lastname": {
                    "type": "string",
                    "description": "The user's last name. Required for NORMAL users.",
                    "minLength": 1
                },
                "username": {
                    "type": "string",
                    "description": "Must be unique.",
                    "minLength": 1
                },
                "display-name": {
                    "type": "string",
                    "description": "The user's display name. Required upon creation.",
                    "minLength": 1
                },
                "recommended-language": {
                    "type": "string",
                    "description": "The recommended language. As an ISO 639-1 code.",
                    "default": "en-US"
                },
                "contact": {
                    "type": "object",
                    "description": "Contact information",
                    "additionalProperties": false,
                    "properties": {
                        "work-phone-number": {
                            "type": "string",
                            "description": "The user's work phone number."
                        },
                        "mobile-phone-number": {
                            "type": "string",
                            "description": "The user's mobile number."
                        },
                        "two-factor-auth-number": {
                            "type": "string",
                            "description": "The user's two factor authentication mobile phone number."
                        },
                        "sms-number": {
                            "type": "string",
                            "description": "The user's SMS number."
                        }
                    }
                },
                "business": {
                    "type": "object",
                    "description": "Business information",
                    "additionalProperties": false,
                    "properties": {
                        "company-name": {
                            "type": "string",
                            "description": "The user's company name.\nIf not specified, it is set with the default company name."
                        },
                        "department": {
                            "type": "string",
                            "description": "The user's department."
                        },
                        "division": {
                            "type": "string",
                            "description": "The user's division."
                        },
                        "title": {
                            "type": "string",
                            "description": "The user's title."
                        },
                        "location": {
                            "type": "string",
                            "description": "The user's location."
                        },
                        "job-function": {
                            "type": "string",
                            "description": "The user's job function.",
                            "enum": [
                                "Analyst",
                                "Other",
                                "Business Development Executive",
                                "Corporate Access",
                                "Developer",
                                "Director",
                                "Economist",
                                "Portfolio Manager",
                                "Project Manager",
                                "Research Analyst",
                                "Sales",
                                "Strategist",
                                "Trader"
                            ]
                        },
                        "asset-classes": {
                            "type": "array",
                            "description": "The user's asset classes (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Equities",
                                    "Cash Equities",
                                    "Securities Lending",
                                    "Fixed Income",
                                    "Government Bonds",
                                    "Prime Brokerage",
                                    "Commodities",
                                    "Municipal Bonds",
                                    "Currencies",
                                    "Corporate Bonds"
                                ]
                            }
                        },
                        "industries": {
                            "type": "array",
                            "description": "The user's job industries (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Healthcare",
                                    "Consumer Non-Cyclicals",
                                    "Transportation",
                                    "Technology",
                                    "Real Estate",
                                    "Basic Materials",
                                    "Financials",
                                    "Energy & Utilities",
                                    "Conglomerates",
                                    "Consumer Cyclicals",
                                    "Services"
                                ]
                            }
                        },
                        "functions": {
                            "type": "array",
                            "description": "The user's job functions (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Collateral",
                                    "Confirmation",
                                    "Trade Processing",
                                    "Pre-Matching",
                                    "Margin",
                                    "Matching",
                                    "Claims Processing",
                                    "Middle Office",
                                    "Liquidity Management",
                                    "Allocation",
                                    "Trade Management",
                                    "Regulatory Outreach",
                                    "Settlements",
                                    "Post Trade Management"
                                ]
                            }
                        },
                        "market-coverages": {
                            "type": "array",
                            "description": "The user's market coverage (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "EMEA",
                                    "NA",
                                    "APAC",
                                    "LATAM"
                                ]
                            }
                        },
                        "responsibilities": {
                            "type": "array",
                            "description": "The user's responsibilities (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BAU",
                                    "Escalation"
                                ]
                            }
                        },
                        "instruments": {
                            "type": "array",
                            "description": "The user's instruments (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Securities",
                                    "Fixed Income",
                                    "Equities"
                                ]
                            }
                        }
                    }
                },
                "password": {
                    "type": "object",
                    "description": "User's password. The password object is optional for end-user accounts (NORMAL). For example, if your organization utilizes SSO, you may not want to specify the password.\n\nPlease note the password object is not used for service accounts (SYSTEM) and therefore cannot be entered in the request payload.",
                    "additionalProperties": false,
                    "required": [
                        "hashedPassword",
                        "hashedSalt"
                    ],
                    "properties": {
                        "hashedPassword": {
                            "description": "A base64-encoded string. The hashed password. This is the hashed version of the password the user would use to login.",
                            "type": "string",
                            "minLength": 1
                        },
                        "hashedSalt": {
                            "description": "A base64-encoded string. The salt used for hashing the hPassword.",
                            "type": "string",
                            "minLength": 1
                        },
                        "hashedKmPassword": {
                            "description": "A base64-encoded string. The hashed password to be used for authenticating to the key manager.",
                            "type": "string",
                            "minLength": 1
                        },
                        "hashedKmSalt": {
                            "description": "A base64-encoded string. The salt used for hashing the khPassword.",
                            "type": "string",
                            "minLength": 1
                        }
                    }
                },
                "keys": {
                    "type": "object",
                    "description": "For SYSTEM users, to setup the RSA keys for authentication.",
                    "properties": {
                        "current": {
                            "$ref": "#/definitions/key-inner"
                        },
                        "previous": {
                            "$ref": "#/definitions/key-inner"
                        }
                    }
                },
                "roles": {
                    "$ref": "#/definitions/roles-inner"
                },
                "entitlements": {
                    "type": "object",
                    "description": "Feature entitlements to configure for the user.",
                    "properties": {
                        "postReadEnabled": {
                            "type": "boolean",
                            "description": "Allows the user to read wall posts."
                        },
                        "postWriteEnabled": {
                            "type": "boolean",
                            "description": "Allows the user to write wall posts."
                        },
                        "delegatesEnabled": {
                            "type": "boolean",
                            "description": "Allows the user to have delegates."
                        },
                        "isExternalIMEnabled": {
                            "type": "boolean",
                            "description": "Allows the user to chat in external IM/MIMs."
                        },
                        "canShareFilesExternally": {
                            "type": "boolean",
                            "description": "Allows the user to share files externally."
                        },
                        "canCreatePublicRoom": {
                            "type": "boolean",
                            "description": "Allows the user to create internal public rooms."
                        },
                        "canUpdateAvatar": {
                            "type": "boolean",
                            "description": "Allows the user to edit profile picture."
                        },
                        "isExternalRoomEnabled": {
                            "type": "boolean",
                            "description": "Allows the user to chat in private external rooms."
                        },
                        "canCreatePushedSignals": {
                            "type": "boolean",
                            "description": "Allows the user to create push signals."
                        },
                        "canUseCompactMode": {
                            "type": "boolean",
                            "description": "Enables Lite Mode."
                        },
                        "mustBeRecorded": {
                            "type": "boolean",
                            "description": "Must be recorded in meetings."
                        },
                        "sendFilesEnabled": {
                            "type": "boolean",
                            "description": "Allows the user to send files internally."
                        },
                        "canUseInternalAudio": {
                            "type": "boolean",
                            "description": "Allows the user to use audio in internal Meetings."
                        },
                        "canUseInternalVideo": {
                            "type": "boolean",
                            "description": "Allows the user to use video in internal Meetings."
                        },
                        "canProjectInternalScreenShare": {
                            "type": "boolean",
                            "description": "Allows the user to share screens in internal Meetings."
                        },
                        "canViewInternalScreenShare": {
                            "type": "boolean",
                            "description": "Allows the user to view shared screens in internal Meetings."
                        },
                        "canCreateMultiLateralRoom": {
                            "type": "boolean",
                            "description": "Allows the user to create multi-lateral room."
                        },
                        "canJoinMultiLateralRoom": {
                            "type": "boolean",
                            "description": "Allows the user to join multi-lateral room."
                        },
                        "canUseFirehose": {
                            "type": "boolean",
                            "description": "Allows the user to use Firehose."
                        },
                        "canUseInternalAudioMobile": {
                            "type": "boolean",
                            "description": "Allows the user to use audio in internal meetings on mobile."
                        },
                        "canUseInternalVideoMobile": {
                            "type": "boolean",
                            "description": "Allows the user to use video in internal meetings on mobile."
                        },
                        "canProjectInternalScreenShareMobile": {
                            "type": "boolean",
                            "description": "Allows the user to share screens in internal meetings on mobile."
                        },
                        "canViewInternalScreenShareMobile": {
                            "type": "boolean",
                            "description": "Allows the user to view shared screens in internal meetings on mobile."
                        },
                        "canManageSignalSubscription": {
                            "type": "boolean",
                            "description": "Allows the user to manage signal subscriptions."
                        },
                        "canCreateDatahose": {
                            "type": "boolean",
                            "description": "Can create datahose feeds."
                        },
                        "canIntegrateEmail": {
                            "type": "boolean",
                            "description": "Can integrate email service."
                        },
                        "canReadDatahose": {
                            "type": "boolean",
                            "description": "Can read from datahose feeds."
                        },
                        "canSuppressMessage": {
                            "type": "boolean",
                            "description": "Can suppress own messages."
                        },
                        "canSwitchToClient20": {
                            "type": "boolean",
                            "description": "Can switch to Client 2.0 experience."
                        },
                        "canUpdateRoomHistoryProperty": {
                            "type": "boolean",
                            "description": "Can Toggle Room's Share History Property."
                        },
                        "canUseEncryptAPI": {
                            "type": "boolean",
                            "description": "Allow user to use Agent Encrypt endpoints."
                        },
                        "enableSwiftSearch": {
                            "type": "boolean",
                            "description": "Can Use Swift Search."
                        },
                        "sdaDevtoolsEnabled": {
                            "type": "boolean",
                            "description": "Enable Developer Tools for SDA."
                        },
                        "sdaPermissionsFullScreen": {
                            "type": "boolean",
                            "description": "Enable Full screen access on SDA."
                        },
                        "sdaPermissionsGeoLocation": {
                            "type": "boolean",
                            "description": "Enable location access on SDA."
                        },
                        "sdaPermissionsMedia": {
                            "type": "boolean",
                            "description": "Enable Media access on SDA."
                        },
                        "sdaPermissionsMidiSysex": {
                            "type": "boolean",
                            "description": "Enable access to MIDI Sysex on SDA."
                        },
                        "sdaPermissionsNotifications": {
                            "type": "boolean",
                            "description": "Allow notifications on SDA."
                        },
                        "sdaPermissionsOpenExternalApp": {
                            "type": "boolean",
                            "description": "Allow Opening External Apps from SDA."
                        },
                        "sdaPermissionsPointerLock": {
                            "type": "boolean",
                            "description": "Enable Pointer Lock on SDA."
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ENABLED",
                        "DISABLED"
                    ]
                }
            }
        },
        "key-inner": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "action": {
                    "description": "A string indicating the action to be performed on the user's RSA.\n\nThe following actions can be performed on the user's active RSA key:\nSAVE\nREVOKE.\n\nThe following actions can be performed onto the user's rotated RSA key:\nREVOKE\nEXTEND.",
                    "type": "string",
                    "enum": [
                        "SAVE",
                        "EXTEND",
                        "REVOKE"
                    ]
                },
                "key": {
                    "description": "A string containing the user's RSA public key. The key must be 4096 bits. Only PKCS8 format is allowed.",
                    "type": "string",
                    "minLength": 1
                },
                "expiration": {
                    "description": "An ISO 8601 timestamp containing the RSA key expiration date. This value is only set for rotated keys.",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "roles-inner": {
            "type": "array",
            "description": "The roles consists of the following possibilities:\n\nFor end-user accounts (NORMAL), roles are:\nINDIVIDUAL\nADMINISTRATOR\nSUPER_ADMINISTRATOR\nL1_SUPPORT\nL2_SUPPORT\nCOMPLIANCE_OFFICER\nSUPER_COMPLIANCE_OFFICER\nFor service accounts (SYSTEM), roles are:\nINDIVIDUAL\nUSER_PROVISIONING\nSCOPE_MANAGEMENT\nCONTENT_MANAGEMENT\nMALWARE_SCAN_MANAGER\nMALWARE_SCAN_STATE_USER\nAUDIT_TRAIL_MANAGEMENT\nPlease note that, for end-user accounts, if no role is specified at creation, then the INDIVIDUAL value is assigned.",
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": [
                    "INDIVIDUAL",
                    "ADMINISTRATOR",
                    "SUPER_ADMINISTRATOR",
                    "L1_SUPPORT",
                    "L2_SUPPORT",
                    "COMPLIANCE_OFFICER",
                    "SUPER_COMPLIANCE_OFFICER",
                    "USER_PROVISIONING",
                    "SCOPE_MANAGEMENT",
                    "CONTENT_MANAGEMENT",
                    "MALWARE_SCAN_MANAGER",
                    "MALWARE_SCAN_STATE_USER",
                    "AUDIT_TRAIL_MANAGEMENT",
                    "AGENT",
                    "CONTENT_EXPORT_SERVICE",
                    "SYMPHONY_ADMIN",
                    "KEY_MANAGER",
                    "EF_POLICY_MANAGEMENT",
                    "CEP_VISIBILITY_GROUP_MANAGEMENT"
                ]
            }
        },
        "user-role-inner": {
            "type": "object",
            "properties": {
                "user-ids": {
                    "type": "array",
                    "description": "Users to add or remove roles from.",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                        "type": [
                            "string",
                            "integer"
                        ],
                        "minLength": 1
                    }
                },
                "roles": {
                    "$ref": "#/definitions/roles-inner"
                }
            },
            "required": [
                "user-ids",
                "roles"
            ]
        },
        "to": {
            "type": "object",
            "properties": {
                "stream-id": {
                    "type": "string",
                    "title": "Stream ID to send the message",
                    "description": "Stream ID where to send the message"
                }
            },
            "additionalProperties": false,
            "required": [
                "stream-id"
            ]
        },
        "attachment": {
            "type": "object",
            "oneOf": [
                {
                    "$ref": "#/definitions/attachment-message"
                },
                {
                    "$ref": "#/definitions/attachment-file"
                }
            ]
        },
        "attachment-message": {
            "type": "object",
            "properties": {
                "message-id": {
                    "type": "string",
                    "minLength": 1
                },
                "attachment-id": {
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": ["message-id"]
        },
        "attachment-file": {
            "type": "object",
            "required": ["content-path"],
            "properties": {
                "content-path": {
                    "type": "string",
                    "minLength": 1
                }
            }
        }
    }
}
