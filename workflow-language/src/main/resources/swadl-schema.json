{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "SWADL Schema",
    "description": "SWADL (Symphony Workflow Automation Definition Language) is a language to describe workflows on Symphony.",
    "default": {},
    "type": "object",
    "additionalProperties": false,
    "required": [
        "name",
        "activities"
    ],
    "properties": {
        "name": {
            "type": "string",
            "title": "Workflow's name",
            "description": "A descriptive name for the workflow, it will appear in logs and audit trails.",
            "default": "my-workflow"
        },
        "version": {
            "type": "string",
            "title": "Workflow's version",
            "description": "For now the v1 version is the only and default one.",
            "default": "v1"
        },
        "variables": {
            "type": "object",
            "title": "Workflow's variables",
            "description": "Variables are accessible and editable within the entire workflow. A map of key: value entries is expected."
        },
        "activities": {
            "type": "array",
            "title": "Workflow's activities",
            "description": "A list of activities to be executed by the workflow. By default the execution is sequential but complex logic can be orchestrated with if/else conditions as well as on/activity-finished events.",
            "$comment": "Defined like this to support both validation and autocompletion, even with custom activities. Last item is removed on the fly during validation and replaced by known custom activities.",
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "create-room": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/create-room-inner"
                            }
                        ]
                    },
                    "update-room": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/update-room-inner"
                            }
                        ]
                    },
                    "add-room-member": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/add-room-member-inner"
                            }
                        ]
                    },
                    "remove-room-member": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/remove-room-member-inner"
                            }
                        ]
                    },
                    "promote-room-owner": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/promote-room-owner-inner"
                            }
                        ]
                    },
                    "demote-room-owner": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/demote-room-owner-inner"
                            }
                        ]
                    },
                    "send-message": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/send-message-inner"
                            }
                        ]
                    },
                    "execute-script": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/execute-script-inner"
                            }
                        ]
                    },
                    "create-user": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/create-user-inner",
                                "required": [
                                    "email",
                                    "username",
                                    "firstname",
                                    "lastname",
                                    "display-name"
                                ]
                            }
                        ]
                    },
                    "update-user": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/create-user-inner"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "user-id": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "minLength": 1
                                    }
                                },
                                "required": [
                                    "user-id"
                                ]
                            }
                        ]
                    },
                    "create-system-user": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/create-system-user-inner",
                                "required": [
                                    "email",
                                    "username",
                                    "display-name"
                                ]
                            }
                        ]
                    },
                    "update-system-user": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/create-system-user-inner"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "user-id": {
                                        "type": [
                                            "string",
                                            "integer"
                                        ],
                                        "minLength": 1
                                    }
                                },
                                "required": [
                                    "user-id"
                                ]
                            }
                        ]
                    },
                    "add-user-role": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/user-role-inner"
                            }
                        ]
                    },
                    "remove-user-role": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/user-role-inner"
                            }
                        ]
                    },
                    "get-user": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-user-inner"
                            }
                        ]
                    },
                    "get-users": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-users-inner"
                            }
                        ]
                    },
                    "get-stream": {
                        "type": "object",
                        "description": "Returns information about a particular stream.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-stream-inner"
                            }
                        ]
                    },
                    "get-room": {
                        "type": "object",
                        "description": "Returns information about a particular chat room.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-room-inner"
                            }
                        ]
                    },
                    "get-message": {
                        "type": "object",
                        "description": "Returns a message found by id.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-message-inner"
                            }
                        ]
                    },
                    "get-stream-members": {
                        "type": "object",
                        "description": "Returns a list of all the current members of a stream (IM, MIM, or chatroom).",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-stream-members-inner"
                            }
                        ]
                    },
                    "get-room-members": {
                        "type": "object",
                        "description": "Lists the current members of an existing room.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-room-members-inner"
                            }
                        ]
                    },
                    "get-user-streams": {
                        "type": "object",
                        "description": "Returns a list of all the streams of which the requesting user is a member, sorted by creation date (ascending - oldest to newest).",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-user-streams-inner"
                            }
                        ]
                    },
                    "get-streams": {
                        "type": "object",
                        "description": "Returns a list of all the streams (IMs, MIMs, and chatrooms) for the calling user's company, sorted by creation date (ascending – oldest to newest).",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-streams-inner"
                            }
                        ]
                    },
                    "get-connection": {
                        "type": "object",
                        "description": "Get one connection status.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/connection-inner"
                            }
                        ]
                    },
                    "create-connection": {
                        "type": "object",
                        "description": "Send a connection request to another user.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/connection-inner"
                            }
                        ]
                    },
                    "accept-connection": {
                        "type": "object",
                        "description": "Accept the connection request for a requesting user.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/connection-inner"
                            }
                        ]
                    },
                    "reject-connection": {
                        "type": "object",
                        "description": "Reject the connection request from a requesting user.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/connection-inner"
                            }
                        ]
                    },
                    "remove-connection": {
                        "type": "object",
                        "description": "Remove a connection with a user.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/connection-inner"
                            }
                        ]
                    },
                    "get-rooms": {
                        "type": "object",
                        "description": "Search for rooms, querying name, description, and specified keywords.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-rooms-inner"
                            }
                        ]
                    },
                    "get-messages": {
                        "type": "object",
                        "description": "Get message by id and list stream's messages.",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-messages-inner"
                            }
                        ]
                    },
                    "get-connections": {
                        "type": "object",
                        "description": "Get one or multiple connections statuses",
                        "allOf": [
                            {
                                "$ref": "#/definitions/basic-activity-inner"
                            },
                            {
                                "$ref": "#/definitions/get-connections-inner"
                            }
                        ]
                    }
                },
                "maxProperties": 1,
                "minProperties": 1,
                "patternProperties": {
                  "^(?!create-room|update-room|add-room-member|remove-room-member|promote-room-owner|demote-room-owner|send-message|execute-script|create-user|create-system-user|create-connection|update-user|update-system-user|add-user-role|remove-user-role|remove-connection|reject-connection|accept-connection|get-user|get-users|get-stream|get-room|get-message|get-connection|get-stream-members|get-room-members|get-user-streams|get-streams|get-rooms|get-messages|get-connections)([a-z0-9-]+)$": {
                        "$comment": "Match everything that is not an already known activity to allow for custom activities to be used.",
                        "$ref": "#/definitions/basic-activity-inner"
                    }
                }
            }
        }
    },
    "definitions": {
        "search-user-inner": {
            "type": "object",
            "properties": {
                "local": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "If true then a local DB search will be performed and only local pod users will be returned. If absent or false then a directory search will be performed and users from other pods who are visible to the calling user will also be returned.",
                    "default": false
                },
                "active": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "If true, it searches for active users only. If false, it searches for inactive users only. If not set, it searches for all users regardless of their status."
                }
            }
        },
        "on": {
            "description": "Events that can trigger the activity execution.",
            "type": "object",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "timeout": {
                            "type": "string",
                            "description": "Timeout while waiting for events, expressed as an ISO 8601 duration.",
                            "pattern": "(\\${.+})|(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?"
                        }
                    }
                },
                {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/form-replied-event"
                        },
                        {
                            "$ref": "#/definitions/activity-expired-event"
                        },
                        {
                            "$ref": "#/definitions/activity-completed-event"
                        },
                        {
                            "$ref": "#/definitions/message-received-event"
                        },
                        {
                            "$ref": "#/definitions/message-suppressed-event"
                        },
                        {
                            "$ref": "#/definitions/post-shared-event"
                        },
                        {
                            "$ref": "#/definitions/im-created-event"
                        },
                        {
                            "$ref": "#/definitions/room-created-event"
                        },
                        {
                            "$ref": "#/definitions/room-updated-event"
                        },
                        {
                            "$ref": "#/definitions/room-deactivated-event"
                        },
                        {
                            "$ref": "#/definitions/room-reactivated-event"
                        },
                        {
                            "$ref": "#/definitions/room-member-promoted-to-owner-event"
                        },
                        {
                            "$ref": "#/definitions/room-member-demoted-from-owner-event"
                        },
                        {
                            "$ref": "#/definitions/user-joined-room-event"
                        },
                        {
                            "$ref": "#/definitions/user-left-room-event"
                        },
                        {
                            "$ref": "#/definitions/user-requested-join-room-event"
                        },
                        {
                            "$ref": "#/definitions/connection-requested-event"
                        },
                        {
                            "$ref": "#/definitions/connection-accepted-event"
                        },
                        {
                            "$ref": "#/definitions/timer-fired-event"
                        },
                        {
                            "$ref": "#/definitions/one-of-event"
                        }
                    ]
                }
            ]
        },
        "user-joined-event": {
            "type": "object",
            "properties": {
                "user-joined-room": {
                    "$ref": "#/definitions/user-joined-event-inner"
                }
            },
            "required": [
                "user-joined-room"
            ]
        },
        "form-replied-event": {
            "type": "object",
            "properties": {
                "form-replied": {
                    "$ref": "#/definitions/form-replied-event-inner"
                }
            },
            "required": [
                "form-replied"
            ]
        },
        "message-received-event": {
            "type": "object",
            "properties": {
                "message-received": {
                    "$ref": "#/definitions/message-received-event-inner"
                }
            },
            "required": [
                "message-received"
            ]
        },
        "message-suppressed-event": {
            "type": "object",
            "properties": {
                "message-suppressed": {
                    "$ref": "#/definitions/message-suppressed-event-inner"
                }
            },
            "required": [
                "message-suppressed"
            ]
        },
        "post-shared-event": {
            "type": "object",
            "properties": {
                "post-shared": {
                    "$ref": "#/definitions/post-shared-event-inner"
                }
            },
            "required": [
                "post-shared"
            ]
        },
        "im-created-event": {
            "type": "object",
            "properties": {
                "im-created": {
                    "$ref": "#/definitions/im-created-event-inner"
                }
            },
            "required": [
                "im-created"
            ]
        },
        "room-created-event": {
            "type": "object",
            "properties": {
                "room-created": {
                    "$ref": "#/definitions/room-created-event-inner"
                }
            },
            "required": [
                "room-created"
            ]
        },
        "room-updated-event": {
            "type": "object",
            "properties": {
                "room-updated": {
                    "$ref": "#/definitions/room-updated-event-inner"
                }
            },
            "required": [
                "room-updated"
            ]
        },
        "room-deactivated-event": {
            "type": "object",
            "properties": {
                "room-deactivated": {
                    "$ref": "#/definitions/room-deactivated-event-inner"
                }
            },
            "required": [
                "room-deactivated"
            ]
        },
        "room-reactivated-event": {
            "type": "object",
            "properties": {
                "room-reactivated": {
                    "$ref": "#/definitions/room-reactivated-event-inner"
                }
            },
            "required": [
                "room-reactivated"
            ]
        },
        "room-member-promoted-to-owner-event": {
            "type": "object",
            "properties": {
                "room-member-promoted-to-owner": {
                    "$ref": "#/definitions/room-member-promoted-to-owner-event-inner"
                }
            },
            "required": [
                "room-member-promoted-to-owner"
            ]
        },
        "room-member-demoted-from-owner-event": {
            "type": "object",
            "properties": {
                "room-member-demoted-from-owner": {
                    "$ref": "#/definitions/room-member-demoted-from-owner-event-inner"
                }
            },
            "required": [
                "room-member-demoted-from-owner"
            ]
        },
        "user-joined-room-event": {
            "type": "object",
            "properties": {
                "user-joined-room": {
                    "$ref": "#/definitions/user-joined-room-event-inner"
                }
            },
            "required": [
                "user-joined-room"
            ]
        },
        "user-left-room-event": {
            "type": "object",
            "properties": {
                "user-left-room": {
                    "$ref": "#/definitions/user-left-room-event-inner"
                }
            },
            "required": [
                "user-left-room"
            ]
        },
        "user-requested-join-room-event": {
            "type": "object",
            "properties": {
                "user-requested-join-room": {
                    "$ref": "#/definitions/user-requested-join-room-event-inner"
                }
            },
            "required": [
                "user-requested-join-room"
            ]
        },
        "connection-requested-event": {
            "type": "object",
            "properties": {
                "connection-requested": {
                    "$ref": "#/definitions/connection-requested-event-inner"
                }
            },
            "required": [
                "connection-requested"
            ]
        },
        "connection-accepted-event": {
            "type": "object",
            "properties": {
                "connection-accepted": {
                    "$ref": "#/definitions/connection-accepted-event-inner"
                }
            },
            "required": [
                "connection-accepted"
            ]
        },
        "activity-expired-event": {
            "type": "object",
            "properties": {
                "activity-expired": {
                    "$ref": "#/definitions/activity-expired-event-inner"
                }
            },
            "required": [
                "activity-expired"
            ]
        },
        "activity-completed-event": {
            "type": "object",
            "properties": {
                "activity-completed": {
                    "$ref": "#/definitions/activity-completed-event-inner"
                },
                "if": {
                    "type": "string"
                }
            },
            "required": [
                "activity-completed"
            ]
        },
        "one-of-event": {
            "type": "object",
            "properties": {
                "one-of": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/form-replied-event"
                            },
                            {
                                "$ref": "#/definitions/activity-expired-event"
                            },
                            {
                                "$ref": "#/definitions/activity-completed-event"
                            },
                            {
                                "$ref": "#/definitions/message-received-event"
                            },
                            {
                                "$ref": "#/definitions/message-suppressed-event"
                            },
                            {
                                "$ref": "#/definitions/post-shared-event"
                            },
                            {
                                "$ref": "#/definitions/im-created-event"
                            },
                            {
                                "$ref": "#/definitions/room-created-event"
                            },
                            {
                                "$ref": "#/definitions/room-updated-event"
                            },
                            {
                                "$ref": "#/definitions/room-deactivated-event"
                            },
                            {
                                "$ref": "#/definitions/room-reactivated-event"
                            },
                            {
                                "$ref": "#/definitions/room-member-promoted-to-owner-event"
                            },
                            {
                                "$ref": "#/definitions/room-member-demoted-from-owner-event"
                            },
                            {
                                "$ref": "#/definitions/user-joined-room-event"
                            },
                            {
                                "$ref": "#/definitions/user-left-room-event"
                            },
                            {
                                "$ref": "#/definitions/user-requested-join-room-event"
                            },
                            {
                                "$ref": "#/definitions/connection-requested-event"
                            },
                            {
                                "$ref": "#/definitions/connection-accepted-event"
                            },
                            {
                                "$ref": "#/definitions/timer-fired-event"
                            }
                        ]
                    }
                }
            },
            "additionalProperties": false,
            "required": [
                "one-of"
            ]
        },
        "timer-fired-event": {
            "type": "object",
            "properties": {
                "timer-fired": {
                    "$ref": "#/definitions/timer-fired-event-inner"
                }
            },
            "additionalProperties": false,
            "required": [
                "timer-fired"
            ]
        },
        "timer-fired-event-inner": {
            "type": "object",
            "properties": {
                "repeat": {
                    "type": "string"
                },
                "at": {
                    "type": "string"
                }
            }
        },
        "user-joined-event-inner": {
            "type": "object",
            "properties": {
                "stream-id": {
                    "type": "string"
                }
            }
        },
        "form-replied-event-inner": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "message-received-event-inner": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "content": {
                    "type": "string"
                },
                "requires-bot-mention": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "message-suppressed-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "post-shared-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "im-created-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-created-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-updated-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-deactivated-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-reactivated-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-member-promoted-to-owner-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "room-member-demoted-from-owner-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "user-joined-room-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "user-left-room-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "user-requested-join-room-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "connection-requested-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "connection-accepted-event-inner": {
            "type": "object",
            "properties": {
            }
        },
        "activity-expired-event-inner": {
            "type": "object",
            "properties": {
                "activity-id": {
                    "type": "string"
                }
            }
        },
        "activity-completed-event-inner": {
            "type": "object",
            "properties": {
                "activity-id": {
                    "type": "string"
                }
            }
        },
        "basic-activity-inner": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Activity's identifier, should be unique across workflow. As it can be used as a variable identifier only alphanumerical characters are allowed.",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]+$"
                },
                "description": {
                    "description": "Activity's description, mostly used for documentation purpose.",
                    "type": "string"
                },
                "on": {
                    "$ref": "#/definitions/on"
                },
                "if": {
                    "type": "string"
                },
                "else": {
                    "type": "object"
                }
            },
            "required": [
                "id"
            ]
        },
        "create-room-inner": {
            "type": "object",
            "description": "Create a room, IM or MIM",
            "anyOf": [
                {
                    "required": [
                        "room-name",
                        "room-description"
                    ]
                },
                {
                    "required": [
                        "uids"
                    ]
                }
            ],
            "properties": {
                "room-name": {
                    "description": "Room's name. Room names will be considered the same if they only differ in capitalization and whitespace. E.g. \"room1\" and \"R O O M 1\" are considered the same. Also, room names must be shorter than 50 characters.",
                    "type": "string",
                    "maxLength": 50
                },
                "room-description": {
                    "description": "Room's description.",
                    "type": "string"
                },
                "public": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "update-room-inner": {
            "type": "object",
            "required": [
                "stream-id"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "room-name": {
                    "description": "Room's name. Room names will be considered the same if they only differ in capitalization and whitespace. E.g. \"room1\" and \"R O O M 1\" are considered the same. Also, room names must be shorter than 50 characters.",
                    "type": "string",
                    "maxLength": 50
                },
                "room-description": {
                    "description": "Room's description.",
                    "type": "string"
                },
                "keywords": {
                    "type": "object"
                },
                "membersCanInvite": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "discoverable": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "public": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "readOnly": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "copyProtected": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "crossPod": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "viewHistory": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "multiLateralRoom": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                },
                "active": {
                    "type": [
                        "boolean",
                        "string"
                    ]
                }
            }
        },
        "add-room-member-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "remove-room-member-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "promote-room-owner-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "demote-room-owner-inner": {
            "type": "object",
            "required": [
                "stream-id",
                "uids"
            ],
            "properties": {
                "stream-id": {
                    "type": "string"
                },
                "uids": {
                    "type": "array"
                }
            }
        },
        "send-message-inner": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "to": {
                    "description": "The recipient (conversation, IM, MI or chatroom) in which the message should be posted.",
                    "$ref": "#/definitions/to"
                },
                "content": {
                    "description": "The content of the message in MessageML format. Must contain at least one space.",
                    "type": "string"
                },
                "attachments": {
                    "description": "One or more attachments to be sent along with the message.",
                    "type": "array",
                    "items": {
                        "$ref":"#/definitions/attachment"
                    }
                }
            }
        },
        "execute-script-inner": {
            "type": "object",
            "required": [
                "script"
            ],
            "properties": {
                "script": {
                    "type": "string",
                    "description": "Script to execute (only Groovy is supported)",
                    "x-intellij-language-injection": "Groovy"
                }
            }
        },
        "create-user-inner": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email address, must be unique",
                    "$comment": "Variable or email regex is accepted.",
                    "pattern": "([$][{].+})|(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                },
                "firstname": {
                    "type": "string",
                    "description": "The user's first name. Required for NORMAL users.",
                    "minLength": 1
                },
                "lastname": {
                    "type": "string",
                    "description": "The user's last name. Required for NORMAL users.",
                    "minLength": 1
                },
                "username": {
                    "type": "string",
                    "description": "Must be unique.",
                    "minLength": 1
                },
                "display-name": {
                    "type": "string",
                    "description": "The user's display name. Required upon creation.",
                    "minLength": 1
                },
                "recommended-language": {
                    "type": "string",
                    "description": "The recommended language. As an ISO 639-1 code.",
                    "default": "en-US"
                },
                "contact": {
                    "type": "object",
                    "description": "Contact information",
                    "additionalProperties": false,
                    "properties": {
                        "work-phone-number": {
                            "type": "string",
                            "description": "The user's work phone number."
                        },
                        "mobile-phone-number": {
                            "type": "string",
                            "description": "The user's mobile number."
                        },
                        "two-factor-auth-number": {
                            "type": "string",
                            "description": "The user's two factor authentication mobile phone number."
                        },
                        "sms-number": {
                            "type": "string",
                            "description": "The user's SMS number."
                        }
                    }
                },
                "business": {
                    "type": "object",
                    "description": "Business information",
                    "additionalProperties": false,
                    "properties": {
                        "company-name": {
                            "type": "string",
                            "description": "The user's company name.\nIf not specified, it is set with the default company name."
                        },
                        "department": {
                            "type": "string",
                            "description": "The user's department."
                        },
                        "division": {
                            "type": "string",
                            "description": "The user's division."
                        },
                        "title": {
                            "type": "string",
                            "description": "The user's title."
                        },
                        "location": {
                            "type": "string",
                            "description": "The user's location."
                        },
                        "job-function": {
                            "type": "string",
                            "description": "The user's job function.",
                            "enum": [
                                "Analyst",
                                "Other",
                                "Business Development Executive",
                                "Corporate Access",
                                "Developer",
                                "Director",
                                "Economist",
                                "Portfolio Manager",
                                "Project Manager",
                                "Research Analyst",
                                "Sales",
                                "Strategist",
                                "Trader"
                            ]
                        },
                        "asset-classes": {
                            "type": "array",
                            "description": "The user's asset classes (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Equities",
                                    "Cash Equities",
                                    "Securities Lending",
                                    "Fixed Income",
                                    "Government Bonds",
                                    "Prime Brokerage",
                                    "Commodities",
                                    "Municipal Bonds",
                                    "Currencies",
                                    "Corporate Bonds"
                                ]
                            }
                        },
                        "industries": {
                            "type": "array",
                            "description": "The user's job industries (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Healthcare",
                                    "Consumer Non-Cyclicals",
                                    "Transportation",
                                    "Technology",
                                    "Real Estate",
                                    "Basic Materials",
                                    "Financials",
                                    "Energy & Utilities",
                                    "Conglomerates",
                                    "Consumer Cyclicals",
                                    "Services"
                                ]
                            }
                        },
                        "functions": {
                            "type": "array",
                            "description": "The user's job functions (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Collateral",
                                    "Confirmation",
                                    "Trade Processing",
                                    "Pre-Matching",
                                    "Margin",
                                    "Matching",
                                    "Claims Processing",
                                    "Middle Office",
                                    "Liquidity Management",
                                    "Allocation",
                                    "Trade Management",
                                    "Regulatory Outreach",
                                    "Settlements",
                                    "Post Trade Management"
                                ]
                            }
                        },
                        "market-coverages": {
                            "type": "array",
                            "description": "The user's market coverage (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "EMEA",
                                    "NA",
                                    "APAC",
                                    "LATAM"
                                ]
                            }
                        },
                        "responsibilities": {
                            "type": "array",
                            "description": "The user's responsibilities (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BAU",
                                    "Escalation"
                                ]
                            }
                        },
                        "instruments": {
                            "type": "array",
                            "description": "The user's instruments (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Securities",
                                    "Fixed Income",
                                    "Equities"
                                ]
                            }
                        }
                    }
                },
                "password": {
                    "type": "object",
                    "description": "User's password. The password object is optional for end-user accounts (NORMAL). For example, if your organization utilizes SSO, you may not want to specify the password.\n\nPlease note the password object is not used for service accounts (SYSTEM) and therefore cannot be entered in the request payload.",
                    "additionalProperties": false,
                    "required": [
                        "hashedPassword",
                        "hashedSalt"
                    ],
                    "properties": {
                        "hashedPassword": {
                            "description": "A base64-encoded string. The hashed password. This is the hashed version of the password the user would use to login.",
                            "type": "string",
                            "minLength": 1
                        },
                        "hashedSalt": {
                            "description": "A base64-encoded string. The salt used for hashing the hPassword.",
                            "type": "string",
                            "minLength": 1
                        },
                        "hashedKmPassword": {
                            "description": "A base64-encoded string. The hashed password to be used for authenticating to the key manager.",
                            "type": "string",
                            "minLength": 1
                        },
                        "hashedKmSalt": {
                            "description": "A base64-encoded string. The salt used for hashing the khPassword.",
                            "type": "string",
                            "minLength": 1
                        }
                    }
                },
                "roles": {
                    "$ref": "#/definitions/roles-inner"
                },
                "entitlements": {
                    "$ref": "#/definitions/entitlements-inner"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ENABLED",
                        "DISABLED"
                    ]
                }
            }
        },
        "create-system-user-inner": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email address, must be unique",
                    "$comment": "Variable or email regex is accepted.",
                    "pattern": "([$][{].+})|(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                },
                "username": {
                    "type": "string",
                    "description": "Must be unique.",
                    "minLength": 1
                },
                "display-name": {
                    "type": "string",
                    "description": "The user's display name. Required upon creation.",
                    "minLength": 1
                },
                "business": {
                    "type": "object",
                    "description": "Business information",
                    "additionalProperties": false,
                    "properties": {
                        "company-name": {
                            "type": "string",
                            "description": "The user's company name.\nIf not specified, it is set with the default company name."
                        },
                        "department": {
                            "type": "string",
                            "description": "The user's department."
                        },
                        "division": {
                            "type": "string",
                            "description": "The user's division."
                        },
                        "title": {
                            "type": "string",
                            "description": "The user's title."
                        },
                        "location": {
                            "type": "string",
                            "description": "The user's location."
                        },
                        "job-function": {
                            "type": "string",
                            "description": "The user's job function.",
                            "enum": [
                                "Analyst",
                                "Other",
                                "Business Development Executive",
                                "Corporate Access",
                                "Developer",
                                "Director",
                                "Economist",
                                "Portfolio Manager",
                                "Project Manager",
                                "Research Analyst",
                                "Sales",
                                "Strategist",
                                "Trader"
                            ]
                        },
                        "asset-classes": {
                            "type": "array",
                            "description": "The user's asset classes (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Equities",
                                    "Cash Equities",
                                    "Securities Lending",
                                    "Fixed Income",
                                    "Government Bonds",
                                    "Prime Brokerage",
                                    "Commodities",
                                    "Municipal Bonds",
                                    "Currencies",
                                    "Corporate Bonds"
                                ]
                            }
                        },
                        "industries": {
                            "type": "array",
                            "description": "The user's job industries (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Healthcare",
                                    "Consumer Non-Cyclicals",
                                    "Transportation",
                                    "Technology",
                                    "Real Estate",
                                    "Basic Materials",
                                    "Financials",
                                    "Energy & Utilities",
                                    "Conglomerates",
                                    "Consumer Cyclicals",
                                    "Services"
                                ]
                            }
                        },
                        "functions": {
                            "type": "array",
                            "description": "The user's job functions (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Collateral",
                                    "Confirmation",
                                    "Trade Processing",
                                    "Pre-Matching",
                                    "Margin",
                                    "Matching",
                                    "Claims Processing",
                                    "Middle Office",
                                    "Liquidity Management",
                                    "Allocation",
                                    "Trade Management",
                                    "Regulatory Outreach",
                                    "Settlements",
                                    "Post Trade Management"
                                ]
                            }
                        },
                        "market-coverages": {
                            "type": "array",
                            "description": "The user's market coverage (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "EMEA",
                                    "NA",
                                    "APAC",
                                    "LATAM"
                                ]
                            }
                        },
                        "responsibilities": {
                            "type": "array",
                            "description": "The user's responsibilities (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BAU",
                                    "Escalation"
                                ]
                            }
                        },
                        "instruments": {
                            "type": "array",
                            "description": "The user's instruments (one or more).",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Securities",
                                    "Fixed Income",
                                    "Equities"
                                ]
                            }
                        }
                    }
                },
                "keys": {
                    "type": "object",
                    "description": "For SYSTEM users, to setup the RSA keys for authentication.",
                    "properties": {
                        "current": {
                            "$ref": "#/definitions/key-inner"
                        },
                        "previous": {
                            "$ref": "#/definitions/key-inner"
                        }
                    }
                },
                "roles": {
                    "$ref": "#/definitions/roles-inner"
                },
                "entitlements": {
                    "$ref": "#/definitions/entitlements-inner"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ENABLED",
                        "DISABLED"
                    ]
                }
            }
        },
        "key-inner": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "action": {
                    "description": "A string indicating the action to be performed on the user's RSA.\n\nThe following actions can be performed on the user's active RSA key:\nSAVE\nREVOKE.\n\nThe following actions can be performed onto the user's rotated RSA key:\nREVOKE\nEXTEND.",
                    "type": "string",
                    "enum": [
                        "SAVE",
                        "EXTEND",
                        "REVOKE"
                    ]
                },
                "key": {
                    "description": "A string containing the user's RSA public key. The key must be 4096 bits. Only PKCS8 format is allowed.",
                    "type": "string",
                    "minLength": 1
                },
                "expiration": {
                    "description": "An ISO 8601 timestamp containing the RSA key expiration date. This value is only set for rotated keys.",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "entitlements-inner": {
            "type": "object",
            "description": "Feature entitlements to configure for the user.",
            "properties": {
                "postReadEnabled": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to read wall posts."
                },
                "postWriteEnabled": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to write wall posts."
                },
                "delegatesEnabled": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to have delegates."
                },
                "isExternalIMEnabled": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to chat in external IM/MIMs."
                },
                "canShareFilesExternally": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to share files externally."
                },
                "canCreatePublicRoom": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to create internal public rooms."
                },
                "canUpdateAvatar": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to edit profile picture."
                },
                "isExternalRoomEnabled": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to chat in private external rooms."
                },
                "canCreatePushedSignals": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to create push signals."
                },
                "canUseCompactMode": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Enables Lite Mode."
                },
                "mustBeRecorded": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Must be recorded in meetings."
                },
                "sendFilesEnabled": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to send files internally."
                },
                "canUseInternalAudio": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to use audio in internal Meetings."
                },
                "canUseInternalVideo": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to use video in internal Meetings."
                },
                "canProjectInternalScreenShare": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to share screens in internal Meetings."
                },
                "canViewInternalScreenShare": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to view shared screens in internal Meetings."
                },
                "canCreateMultiLateralRoom": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to create multi-lateral room."
                },
                "canJoinMultiLateralRoom": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to join multi-lateral room."
                },
                "canUseFirehose": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to use Firehose."
                },
                "canUseInternalAudioMobile": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to use audio in internal meetings on mobile."
                },
                "canUseInternalVideoMobile": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to use video in internal meetings on mobile."
                },
                "canProjectInternalScreenShareMobile": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to share screens in internal meetings on mobile."
                },
                "canViewInternalScreenShareMobile": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to view shared screens in internal meetings on mobile."
                },
                "canManageSignalSubscription": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allows the user to manage signal subscriptions."
                },
                "canCreateDatahose": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Can create datahose feeds."
                },
                "canIntegrateEmail": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Can integrate email service."
                },
                "canReadDatahose": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Can read from datahose feeds."
                },
                "canSuppressMessage": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Can suppress own messages."
                },
                "canSwitchToClient20": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Can switch to Client 2.0 experience."
                },
                "canUpdateRoomHistoryProperty": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Can Toggle Room's Share History Property."
                },
                "canUseEncryptAPI": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allow user to use Agent Encrypt endpoints."
                },
                "enableSwiftSearch": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Can Use Swift Search."
                },
                "sdaDevtoolsEnabled": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Enable Developer Tools for SDA."
                },
                "sdaPermissionsFullScreen": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Enable Full screen access on SDA."
                },
                "sdaPermissionsGeoLocation": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Enable location access on SDA."
                },
                "sdaPermissionsMedia": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Enable Media access on SDA."
                },
                "sdaPermissionsMidiSysex": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Enable access to MIDI Sysex on SDA."
                },
                "sdaPermissionsNotifications": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allow notifications on SDA."
                },
                "sdaPermissionsOpenExternalApp": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Allow Opening External Apps from SDA."
                },
                "sdaPermissionsPointerLock": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Enable Pointer Lock on SDA."
                }
            }
        },
        "roles-inner": {
            "type": "array",
            "description": "The roles consists of the following possibilities:\n\nFor end-user accounts (NORMAL), roles are:\nINDIVIDUAL\nADMINISTRATOR\nSUPER_ADMINISTRATOR\nL1_SUPPORT\nL2_SUPPORT\nCOMPLIANCE_OFFICER\nSUPER_COMPLIANCE_OFFICER\nFor service accounts (SYSTEM), roles are:\nINDIVIDUAL\nUSER_PROVISIONING\nSCOPE_MANAGEMENT\nCONTENT_MANAGEMENT\nMALWARE_SCAN_MANAGER\nMALWARE_SCAN_STATE_USER\nAUDIT_TRAIL_MANAGEMENT\nPlease note that, for end-user accounts, if no role is specified at creation, then the INDIVIDUAL value is assigned.",
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": [
                    "INDIVIDUAL",
                    "ADMINISTRATOR",
                    "SUPER_ADMINISTRATOR",
                    "L1_SUPPORT",
                    "L2_SUPPORT",
                    "COMPLIANCE_OFFICER",
                    "SUPER_COMPLIANCE_OFFICER",
                    "USER_PROVISIONING",
                    "SCOPE_MANAGEMENT",
                    "CONTENT_MANAGEMENT",
                    "MALWARE_SCAN_MANAGER",
                    "MALWARE_SCAN_STATE_USER",
                    "AUDIT_TRAIL_MANAGEMENT",
                    "AGENT",
                    "CONTENT_EXPORT_SERVICE",
                    "SYMPHONY_ADMIN",
                    "KEY_MANAGER",
                    "EF_POLICY_MANAGEMENT",
                    "CEP_VISIBILITY_GROUP_MANAGEMENT"
                ]
            }
        },
        "user-role-inner": {
            "type": "object",
            "properties": {
                "user-ids": {
                    "type": "array",
                    "description": "Users to add or remove roles from.",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                        "type": [
                            "string",
                            "integer"
                        ],
                        "minLength": 1
                    }
                },
                "roles": {
                    "$ref": "#/definitions/roles-inner"
                }
            },
            "required": [
                "user-ids",
                "roles"
            ]
        },
        "get-user-inner": {
            "type": "object",
            "properties": {
                "user-id": {
                    "type": [
                        "string",
                        "integer"
                    ],
                    "minLength": 1
                }
            },
            "required": [
                "user-id"
            ]
        },
        "get-users-inner": {
            "type": "object",
            "properties": {
                "user-ids": {
                    "type": "array",
                    "description": "List of user ids. Note that for this activity, you can use either the user-ids, the emails or the usernames, but only one at a time, you cannot mix and match them.",
                    "items": {
                        "type": [
                            "string",
                            "integer"
                        ]
                    },
                    "minLength": 1
                },
                "emails": {
                    "type": "array",
                    "description": "List of email addresses. Note that for this activity, you can use either the user-ids, the emails or the usernames, but only one at a time, you cannot mix and match them.",
                    "items": {
                        "type": "string",
                        "$comment": "Variable or email regex is accepted.",
                        "pattern": "([$][{].+})|(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                    },
                    "minLength": 1
                },
                "usernames": {
                    "type": "array",
                    "description": "List of usernames. If username is specified, local must be set to true. It is possible to search for more than one username by separating them by comma. Note that for this activity, you can use either the user-ids, the emails or the usernames, but only one at a time, you cannot mix and match them.",
                    "items": {
                        "type": "string"
                    },
                    "minLength": 1
                },
                "local": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "If true then a local DB search will be performed and only local pod users will be returned. If absent or false then a directory search will be performed and users from other pods who are visible to the calling user will also be returned.",
                    "default": false
                },
                "active": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "If true, it searches for active users only. If false, it searches for inactive users only. If not set, it searches for all users regardless of their status."
                }
            }
        },
        "get-stream-inner": {
            "properties": {
                "stream-id": {
                    "description": "Id of the stream for which to get information.",
                    "type": [
                        "string"
                    ],
                    "minLength": 1
                }
            },
            "required": [
                "stream-id"
            ]
        },
        "get-room-inner": {
            "properties": {
                "stream-id": {
                    "description": "Room streamId.",
                    "type": [
                        "string"
                    ],
                    "minLength": 1
                }
            },
            "required": [
                "stream-id"
            ]
        },
        "connection-inner": {
            "type": "object",
            "properties": {
                "user-id": {
                    "description": "User id with whom to get/accept/reject/remove the connection status.",
                    "type": [
                        "string",
                        "integer"
                    ],
                    "minLength": 1
                }
            },
            "required": ["user-id"]
        },
        "get-stream-members-inner": {
            "properties": {
                "stream-id": {
                    "description": "Id of the stream for which to return members.",
                    "type": [
                        "string"
                    ],
                    "minLength": 1
                },
                "limit": {
                    "description": "Maximum number of members to be returned - used for pagination. Maximum allowed is 1000.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "maximum": 1000,
                    "minimum": 1
                },
                "skip": {
                    "description": "Number of members to be skipped during return - used for pagination.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "minimum": 0
                }
            },
            "required": [
                "stream-id"
            ]
        },
        "get-room-members-inner": {
            "properties": {
                "stream-id": {
                    "description": "Id of the stream for which to return members.",
                    "type": [
                        "string"
                    ],
                    "minLength": 1
                }
            },
            "required": [
                "stream-id"
            ]
        },
        "get-user-streams-inner": {
            "properties": {
                "types": {
                    "description": "A list of stream types that will be returned. Options are IM (1-1 instant messages), MIM (multiparty instant messages), ROOM (rooms), POST (the user's wall). For more information, see the streamTypes section below.\nIf not specified, all types of streams are returned.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "IM",
                            "MIM",
                            "ROOM",
                            "POST"
                        ]
                    }
                },
                "include-inactive-streams": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "Whether to include inactive conversations. A chatroom is inactive if it has been deactivated by an owner or admin. An IM or MIM is inactive if one of the participating users has been deactivated by an admin. If not specified, only active streams are returned."
                },
                "limit": {
                    "description": "Maximum number of streams to return.\nIf limit is not set, a maximum of 50 streams will be returned.\nIf limit=0, all user streams will be returned.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "default": 50,
                    "minimum": 0
                },
                "skip": {
                    "description": "Number of stream results to skip.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "minimum": 0
                }
            }
        },
        "get-message-inner": {
            "properties": {
                "message-id": {
                    "description": "The message identifier.",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": ["message-id"]
        },
        "get-streams-inner": {
            "properties": {
                "types": {
                    "description": "A list of stream types that will be returned (IM, MIM, ROOM). If not specified, streams of all types are returned.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "IM",
                            "MIM",
                            "ROOM"
                        ]
                    }
                },
                "scope": {
                    "type": "string",
                    "enum": [
                        "INTERNAL",
                        "EXTERNAL"
                    ],
                    "description": "The scope of the stream: INTERNAL (restricted to members of the calling user's company) or EXTERNAL (including members of the calling user's company, as well as another firm). If not specified, returns streams of either scope."
                },
                "origin": {
                    "type": "string",
                    "enum": [
                        "INTERNAL",
                        "EXTERNAL"
                    ],
                    "description": "The origin of the room: INTERNAL (created by a user of the calling user's company) or EXTERNAL (created by a user of another company). If not specified, returns streams of either origin. Only applies to chatrooms with External scope."
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "PRIVATE",
                        "PUBLIC"
                    ],
                    "description": "The privacy setting of the room: PRIVATE (members must be added) OR PUBLIC (anyone can join). If not specified, returns both private and public rooms. Only applies to chatrooms with internal scope."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ],
                    "description": "The status of the room: ACTIVE or INACTIVE. If not specified, both active and inactive streams are returned."
                },
                "start-date": {
                    "type": "string",
                    "description": "Restricts result set to rooms that have been modified since this date (an Epoch timestamp specified in milliseconds). When specified along with endDate, enables the developer to specify rooms modified within a given time range."
                },
                "end-date": {
                    "type": "string",
                    "description": "Restricts result set to rooms that have been modified prior to this date (an Epoch timestamp specified in milliseconds). When specified along with startDate, enables the developer to specify rooms modified within a given time range."
                },
                "limit": {
                    "description": "Maximum number of streams to be returned - used for pagination. Maximum allowed is 100.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "minimum": 1,
                    "maximum": 100
                },
                "skip": {
                    "description": "Number of streams to be skipped during return - used for pagination.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "minimum": 0
                }
            }
        },
        "get-rooms-inner": {
            "properties": {
                "query": {
                    "description": "The query which is searched for in room name, description, and optionally keywords. Case insensitive.",
                    "type": "string",
                    "minLength": 1
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of room keywords whose values will be queried."
                },
                "active": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "If true, it restricts the search to active rooms. If false, it restricts the search to inactive rooms. If not specified, it includes both active and inactive rooms. Note that for inactive rooms, only rooms where the calling user is a member will be in the search scope; read the box “Room Search Scope” for further details."
                },
                "private": {
                    "type": [
                        "boolean",
                        "string"
                    ],
                    "description": "If true, it includes only private rooms in the search results. If false, only public rooms are returned. If not specified, both public and private rooms are returned. Note that for inactive rooms, only discoverable rooms and rooms where the calling user is a member will be in the search scope; read the box “Room Search Scope” for further details."
                },
                "creator-id": {
                    "type": [
                        "string",
                        "number"
                    ],
                    "description": "If provided, restricts the search to rooms created by the specified user.",
                    "minLength": 1
                },
                "owner-id": {
                    "type": [
                        "string",
                        "number"
                    ],
                    "description": "If provided, restricts the search to rooms owned by the specified user.",
                    "minLength": 1
                },
                "member-id": {
                    "type": [
                        "string",
                        "number"
                    ],
                    "description": "If provided, restricts the search to rooms where the specified user is a member.",
                    "minLength": 1
                },
                "sort-order": {
                    "type": "string",
                    "enum": [
                        "BASIC",
                        "RELEVANCE"
                    ],
                    "description": "Sort algorithm to be used. Supports two values: BASIC (legacy algorithm) and RELEVANCE (enhanced algorithm)."
                },
                "limit": {
                    "description": "Maximum number of rooms to return. Must be a positive integer that doesn’t exceed 100.",
                    "type": [
                        "string",
                        "integer"
                    ],
                    "minimum": 1,
                    "maximum": 100
                },
                "skip": {
                    "description": "Number of room search results to skip.",
                    "type": [
                        "string",
                        "integer"
                    ],
                    "minimum": 0
                }
            },
            "required": [
                "query"
            ]
        },
        "get-messages-inner": {
            "type": "object",
            "properties": {
                "stream-id": {
                    "description": "Stream identifier.",
                    "type": "string",
                    "minLength": 1
                },
                "since": {
                    "description": "Date, in ISO 8601 format, of the earliest possible data of the first message returned.",
                    "type": "string",
                    "minLength": 1
                },
                "skip": {
                    "description": "Number of messages search to skip.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "minimum": 0
                },
                "limit": {
                    "description": "Maximum number of messages to return. Default limit is 50.",
                    "type": [
                        "integer",
                        "string"
                    ],
                    "minimum": 0
                }
            },
            "required": ["stream-id", "since"]
        },
        "get-connections-inner": {
            "type": "object",
            "properties": {
                "user-ids": {
                    "description": "List of user ids that this activity results will be restricted to their connections.",
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                        "type": [
                            "string",
                            "integer"
                        ],
                        "minLength": 1
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "PENDING_INCOMING",
                        "PENDING_OUTGOING",
                        "ACCEPTED",
                        "REJECTED",
                        "ALL"
                    ]
                }
            },
            "required": ["user-ids", "status"]
        },
        "to": {
            "type": "object",
            "properties": {
                "stream-id": {
                    "type": "string",
                    "title": "Stream ID to send the message",
                    "description": "Stream ID where to send the message"
                }
            },
            "additionalProperties": false,
            "required": [
                "stream-id"
            ]
        },
        "attachment": {
            "type": "object",
            "oneOf": [
                {
                    "$ref": "#/definitions/attachment-message"
                },
                {
                    "$ref": "#/definitions/attachment-file"
                }
            ]
        },
        "attachment-message": {
            "type": "object",
            "properties": {
                "message-id": {
                    "description": "Message id having the attachment to forward.",
                    "type": "string",
                    "minLength": 1
                },
                "attachment-id": {
                    "description": "Attachment id to forward. If not set, all attachments in the provided message are forwarded.",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": ["message-id"]
        },
        "attachment-file": {
            "type": "object",
            "required": ["content-path"],
            "properties": {
                "content-path": {
                    "description": "Path to the file to be attached to the message. The path is relative to the workflows folder.",
                    "type": "string",
                    "minLength": 1
                }
            }
        }
    }
}
